.SYNTAX PROGRAM

literal = ( .STRING | .NUMBER ) .OUT('literal(frame, '*')') ;

symbol = .ID .OUT('word(frame, "'*'")') ;

seq = '}' .OUT('ast = send(ast_vt, "allocate")')
            .OUT('send(ast, "init", SEQ, tuple(reversed(frame)))')
            .OUT('stack[-1] = ast')
            .OUT('frame = []')
            .OUT('stack.append(frame)') ;

pull = '^' .OUT('frame.append(stack.pop(-2))') ;

term = literal | symbol | seq | pull ;

PROGRAM = .OUT('frame = []')
          .OUT('stack = [frame]')
          term $ term '.' .OUT('if stack[-1] == []: del stack[-1]')
          .OUT('return stack') ;

.END

