▶ PROGRAM

PROGRAM → '▶' ●
    «⇤'class '⊙'_compiler:'↵↦↵»
    «'def compile(self, source):'↦↵»
        «'self.inbuf = source'↵»
        «'self.pos = 0'↵»
        «'self.outbuf = ""'↵»
        «'self.margin = 0'↵»
        «'self.gnlabel = 1'↵»
        «'self.rule_'⊙'()'↵»
        «'return self.outbuf'↤↵↵»
    ★ ST
    '◀' ▪

ST → ● «'def rule_'⊙'(self):'↦↵»
    «'rname = "'⊙'"'↵»
    «'rlabel = 0'↵»
    '→' EX1 '▪'
    «↤↵↵» ▪

EX1 → EX2 ★ ('|' «'if not self.flag:'↦↵» EX2 «↤↵» ) ▪

EX2 → (EX3 «'if self.flag:'↦↵» | OUTPUT «'if True:'↦↵» )
       ★ (EX3 «'if not self.flag: self.runBEjsfn(rname)'↵↵» | OUTPUT)
      «'pass'↵»
      «↤↵» ▪

EX3 → ● «'self.rule_'⊙'()'↵» |
      ≋ «'self.TST('⊙')'↵» |
      '●' «'self.ID()'↵» |
      'ℕ' «'self.NUM()'↵» |
      '≋' «'self.SR()'↵» |
      '(' EX1 ')' |
      '∅' «'self.SET()'↵» |
      '★' «'self.SET()'↵»
          «'while self.flag:'↦↵»
          EX3
          «↤↵»
          «'self.SET()'↵» ▪

OUTPUT → '«' ★ OUT1 '»' ▪

OUT1 → '⊙' «'self.CI()'↵» |
        ≋  «'self.CL('⊙')'↵» |
       '#' «'if rlabel == 0:'↦↵»
               «'rlable = self.gnlabel'↵»
               «'self.gnlabel += 1'↤↵»
           «'self.CL(str(rlabel))'↵» |
       '↵' «'self.NL()'↵» |
       '⇤' «'self.LB()'↵» |
       '⇥' «'self.TB()'↵» |
       '↦' «'self.LMI()'↵» |
       '↤' «'self.LMD()'↵» ▪

◀
