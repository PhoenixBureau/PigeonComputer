	define(switch_bit=0)
	define(switch_reg=r0)

	label(PROGRAM)
	label(OUT1) # subroutine ==========
	startswith('*1')
	sbrs(switch_reg, switch_bit)
	jmp(L1)
	copy_literal('gen_label_1()')
	output_line()
	label(L1)
	sbrc(switch_reg, switch_bit)
	jmp(L2)
	startswith('*2')
	sbrs(switch_reg, switch_bit)
	jmp(L3)
	copy_literal('gen_label_2()')
	output_line()
	label(L3)
	sbrc(switch_reg, switch_bit)
	jmp(L2)
	startswith('*')
	sbrs(switch_reg, switch_bit)
	jmp(L4)
	copy_literal('copy_input()')
	output_line()
	label(L4)
	sbrc(switch_reg, switch_bit)
	jmp(L2)
	string()
	sbrs(switch_reg, switch_bit)
	jmp(L5)
	copy_literal('copy_literal(')
	copy_input()
	copy_literal(')')
	output_line()
	label(L5)
	label(L2)
	ret()

	label(OUTPUT) # subroutine ==========
	startswith('.OUT')
	sbrs(switch_reg, switch_bit)
	jmp(L6)
	startswith('(')
	sbrs(switch_reg, switch_bit)
	jmp(ERROR)
	label(L7)
	call(OUT1)
	sbrc(switch_reg, switch_bit)
	jmp(L7)
	sbr(switch_reg, 1 << switch_bit)
	sbrs(switch_reg, switch_bit)
	jmp(ERROR)
	startswith(')')
	sbrs(switch_reg, switch_bit)
	jmp(ERROR)
	label(L6)
	sbrc(switch_reg, switch_bit)
	jmp(L8)
	startswith('.LABEL')
	sbrs(switch_reg, switch_bit)
	jmp(L9)
	copy_literal('LB')
	output_line()
	call(OUT1)
	sbrs(switch_reg, switch_bit)
	jmp(ERROR)
	label(L9)
	label(L8)
	sbrs(switch_reg, switch_bit)
	jmp(L10)
	copy_literal('output_line()')
	output_line()
	label(L10)
	label(L11)
	ret()

	label(EX3) # subroutine ==========
	identifier()
	sbrs(switch_reg, switch_bit)
	jmp(L12)
	copy_literal('call(')
	copy_input()
	copy_literal(')')
	output_line()
	label(L12)
	sbrc(switch_reg, switch_bit)
	jmp(L13)
	string()
	sbrs(switch_reg, switch_bit)
	jmp(L14)
	copy_literal('startswith(')
	copy_input()
	copy_literal(')')
	output_line()
	label(L14)
	sbrc(switch_reg, switch_bit)
	jmp(L13)
	startswith('.ID')
	sbrs(switch_reg, switch_bit)
	jmp(L15)
	copy_literal('identifier()')
	output_line()
	label(L15)
	sbrc(switch_reg, switch_bit)
	jmp(L13)
	startswith('.NUMBER')
	sbrs(switch_reg, switch_bit)
	jmp(L16)
	copy_literal('number()')
	output_line()
	label(L16)
	sbrc(switch_reg, switch_bit)
	jmp(L13)
	startswith('.STRING')
	sbrs(switch_reg, switch_bit)
	jmp(L17)
	copy_literal('string()')
	output_line()
	label(L17)
	sbrc(switch_reg, switch_bit)
	jmp(L13)
	startswith('(')
	sbrs(switch_reg, switch_bit)
	jmp(L18)
	call(EX1)
	sbrs(switch_reg, switch_bit)
	jmp(ERROR)
	startswith(')')
	sbrs(switch_reg, switch_bit)
	jmp(ERROR)
	label(L18)
	sbrc(switch_reg, switch_bit)
	jmp(L13)
	startswith('.EMPTY')
	sbrs(switch_reg, switch_bit)
	jmp(L19)
	copy_literal('sbr(switch_reg, 1 << switch_bit)')
	output_line()
	label(L19)
	sbrc(switch_reg, switch_bit)
	jmp(L13)
	startswith('$')
	sbrs(switch_reg, switch_bit)
	jmp(L20)
	copy_literal('label(')
	gen_label_1()
	copy_literal(')')
	output_line()
	call(EX3)
	sbrs(switch_reg, switch_bit)
	jmp(ERROR)
	copy_literal('sbrc(switch_reg, switch_bit)')
	output_line()
	copy_literal('jmp(')
	gen_label_1()
	copy_literal(')')
	output_line()
	copy_literal('sbr(switch_reg, 1 << switch_bit)')
	output_line()
	label(L20)
	label(L13)
	ret()

	label(EX2) # subroutine ==========
	call(EX3)
	sbrs(switch_reg, switch_bit)
	jmp(L21)
	copy_literal('sbrs(switch_reg, switch_bit)')
	output_line()
	copy_literal('jmp(')
	gen_label_1()
	copy_literal(')')
	output_line()
	label(L21)
	sbrc(switch_reg, switch_bit)
	jmp(L22)
	call(OUTPUT)
	sbrs(switch_reg, switch_bit)
	jmp(L23)
	label(L23)
	label(L22)
	sbrs(switch_reg, switch_bit)
	jmp(L24)
	label(L25)
	call(EX3)
	sbrs(switch_reg, switch_bit)
	jmp(L26)
	copy_literal('sbrs(switch_reg, switch_bit)')
	output_line()
	copy_literal('jmp(ERROR)')
	output_line()
	label(L26)
	sbrc(switch_reg, switch_bit)
	jmp(L27)
	call(OUTPUT)
	sbrs(switch_reg, switch_bit)
	jmp(L28)
	label(L28)
	label(L27)
	sbrc(switch_reg, switch_bit)
	jmp(L25)
	sbr(switch_reg, 1 << switch_bit)
	sbrs(switch_reg, switch_bit)
	jmp(ERROR)
	copy_literal('label(')
	gen_label_1()
	copy_literal(')')
	output_line()
	label(L24)
	label(L29)
	ret()

	label(EX1) # subroutine ==========
	call(EX2)
	sbrs(switch_reg, switch_bit)
	jmp(L30)
	label(L31)
	startswith('|')
	sbrs(switch_reg, switch_bit)
	jmp(L32)
	copy_literal('sbrc(switch_reg, switch_bit)')
	output_line()
	copy_literal('jmp(')
	gen_label_1()
	copy_literal(')')
	output_line()
	call(EX2)
	sbrs(switch_reg, switch_bit)
	jmp(ERROR)
	label(L32)
	label(L33)
	sbrc(switch_reg, switch_bit)
	jmp(L31)
	sbr(switch_reg, 1 << switch_bit)
	sbrs(switch_reg, switch_bit)
	jmp(ERROR)
	copy_literal('label(')
	gen_label_1()
	copy_literal(')')
	output_line()
	label(L30)
	label(L34)
	ret()

	label(ST) # subroutine ==========
	identifier()
	sbrs(switch_reg, switch_bit)
	jmp(L35)
	copy_literal('label(')
	copy_input()
	copy_literal(') # subroutine ==========')
	output_line()
	startswith('=')
	sbrs(switch_reg, switch_bit)
	jmp(ERROR)
	call(EX1)
	sbrs(switch_reg, switch_bit)
	jmp(ERROR)
	startswith(';')
	sbrs(switch_reg, switch_bit)
	jmp(ERROR)
	copy_literal('ret()')
	output_line()
	copy_literal('')
	output_line()
	label(L35)
	label(L36)
	ret()

	label(PROGRAM) # subroutine ==========
	startswith('.SYNTAX')
	sbrs(switch_reg, switch_bit)
	jmp(L37)
	identifier()
	sbrs(switch_reg, switch_bit)
	jmp(ERROR)
	copy_literal('define(switch_bit=0)')
	output_line()
	copy_literal('define(switch_reg=r0)')
	output_line()
	copy_literal('')
	output_line()
	copy_literal('label(')
	copy_input()
	copy_literal(')')
	output_line()
	label(L38)
	call(ST)
	sbrc(switch_reg, switch_bit)
	jmp(L38)
	sbr(switch_reg, 1 << switch_bit)
	sbrs(switch_reg, switch_bit)
	jmp(ERROR)
	startswith('.END')
	sbrs(switch_reg, switch_bit)
	jmp(ERROR)
	copy_literal('#END')
	output_line()
	label(L37)
	label(L39)
	ret()

	#END

